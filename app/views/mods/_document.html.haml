-# Parameters:
-# - document: Must be a Mod or Release instance.
- document = local_assigns[:document]

-# Assign records
- case document
- when Release
  - release = document
  - mod = release.mod
- when Mod
  - mod = document
  - release = mod.current_release
- else
  - raise ArgumentError, "Unknown type: #{document.class}"
- user = mod.owner

%div.module_document
  -# Display overview
  %div.module_release_overview
    %table
      %tr
        %td.left
          = link_to "Download", release.file.url, :class => "download-link" if release
        %td.right
          %ul
            %li
              - if release
                Latest Release:
                = link_to release.version, vanity_release_path(user, mod, release)
                &middot;
                = release.created_at.to_date.to_s(:long)
              - else
                No releases
            %li Shared by #{user_link user}
            - if mod.project_url.present?
              %li Homepage at #{link_to h(mod.project_url), h(mod.project_url)}
            - if mod.tags.any?
              %li Tagged with #{tag_list mod}

  %section#metadata
    - if mod.description.present?
      %div.mod_description
        %h3 Module description
        = markdown(mod.description)
    - if release
      - if release.notes.present?
        %div.release_notes
          %h3
            Release notes for version
            = release.version
          = markdown(release.notes)

      - if release.metadata.present?
        - if release.metadata['dependencies'].present?
          %div.dependencies
            %h3 Dependencies
            %ul
              - for dependency in release.metadata['dependencies']
                %li
                  %b= link_to_dependency(dependency)
                  - if dependency['version_requirement'].present?
                    = surround '(', ')' do
                      &= dependency['version_requirement']
        - if release.metadata['types'].present?
          %div.types
            %h3 Types
            %div.indent
            - for type in release.metadata['types']
              %div.type
                - if type['name'].present?
                  %h4.type_name&= type['name']
                %div.indent
                  - if type['doc'].present?
                    %div.type_description
                      %h5 Description
                      -# FIXME eliminate this craziness
                      = type['doc'].split(/\n{2,}/).map { |t| "<p>#{h t}</p>" }
                  - for kind in %w[parameter property provider]
                    - singular = kind
                    - plural = kind.pluralize
                    - if type[plural].present?
                      %div{:class => "type_#{plural}"}
                        %h5= plural.titleize
                        %ul
                          - for element in type[plural]
                            %li{:class => "type_#{singular}"}
                              = label_doc element
