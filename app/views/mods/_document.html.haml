-# Parameters:
-# - document: Must be a Mod or Release instance.

-# Assign records
- case document
- when Release
  - release = document
  - mod = release.mod
- when Mod
  - mod = document
  - release = mod.current_release
- else
  - raise ArgumentError, "Unknown type: #{document.class}"
- user = mod.owner

%div.module_document
  -# Display overview
  %div.module_release_overview
    %table
      %tr
        %td.left
          = link_to "Download", release.file.url, :class => "download-link" if release
        %td.right
          %ul
            %li
              - if release
                Latest Release:
                = link_to release.version, vanity_release_path(user, mod, release)
                &middot;
                = mod.created_at.to_date.to_s(:long)
              - else
                This module has not been released.
            %li Shared by #{user_link user}
            - if mod.project_url.present?
              %li Homepage at #{link_to h(mod.project_url), h(mod.project_url)}
            %li Tagged with #{tag_list mod}

  -# Display details
  - if release && release.notes.present?
    %div.release_notes
      = markdown(release.notes)

  -# Display metadata
  - if release && release.metadata.present?
    %section#metadata
      %div.dependencies
        %h3 Dependencies
        %div
          - if release.metadata['dependencies'].blank?
            %p.blank No dependencies on other modules.
          - else
            %ul
              - release.metadata['dependencies'].each do |dep|
                %li
                  %b= link_to_dependency dep
                  - if dep['version_requirement']
                    = surround '(', ')' do
                      &= dep['version_requirement']
      %div.types
        %h3 Types
        %div.indent
          - if release.metadata.blank? || release.metadata['types'].blank?
            %p.blank No type information provided.
          - else
            - release.metadata['types'].each do |type|
              %div.type
                %h4&= type['name']
                %div.indent
                  %h5 Description
                  -# FIXME eliminate this craziness
                  = type['doc'].split(/\n{2,}/).map { |t| "<p>#{h t}</p>" }
                  %h5 Parameters
                  - if type['parameters'].present?
                    %ul
                      - type['parameters'].each do |param|
                        %li
                          = label_doc param
                  %h5 Properties
                  - if type['properties'].present?
                    %ul
                      - type['properties'].each do |prop|
                        %li
                          = label_doc prop
                  %h5 Providers
                  - if type['providers'].present?
                    %ul
                      - type['providers'].each do |provider|
                        %li
                          = label_doc provider

